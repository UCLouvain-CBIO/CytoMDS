% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats.R
\name{EMDDist}
\alias{EMDDist}
\title{Calculate Earth Mover's distance between two flowFrames}
\usage{
EMDDist(
  ff1,
  ff2,
  channels = NULL,
  checkChannels = TRUE,
  binSize = 0.05,
  minRange = -10,
  maxRange = 10,
  returnAll = FALSE
)
}
\arguments{
\item{ff1}{a flowCore::flowFrame}

\item{ff2}{a flowCore::flowFrame}

\item{channels}{which channels (integer index(ices) or character(s)):
\itemize{
\item if it is a character vector,
it can refer to either the channel names, or the marker names
\item if it is a numeric vector,
it refers to the indexes of channels in \code{ff1}
\item if NULL all scatter and fluorescent channels of \code{ff1}
will be selected
}}

\item{checkChannels}{if \code{TRUE}, will explicitly check that
all provided channels are present in both flowFrames}

\item{binSize}{size of equal bins to approximate
the marginal distributions.}

\item{minRange}{minimum value taken
when approximating the marginal distributions}

\item{maxRange}{maximum value taken
when approximating the marginal distributions}

\item{returnAll}{If \code{TRUE}, distributions and marginal distribution
distances are returned as well. Default = \code{FALSE}.}
}
\value{
the Earth Mover's distance between \code{ff1} and \code{ff2},
which is calculated by summing up all EMD approximates for
the marginal distributions of each channel
}
\description{
Calculate Earth Mover's distance between two flowFrames
}
\examples{

library(CytoPipeline)

data(OMIP021Samples)

# estimate scale transformations 
# and transform the whole OMIP021Samples

transList <- estimateScaleTransforms(
    ff = OMIP021Samples[[1]],
    fluoMethod = "estimateLogicle",
    scatterMethod = "linearQuantile",
    scatterRefMarker = "BV785 - CD3")

OMIP021Trans <- CytoPipeline::applyScaleTransforms(
    OMIP021Samples, 
    transList)

# distance with itself (all channels at once)
# => should return 0
dist0 <- EMDDist(
    ff1 = OMIP021Trans[[1]],
    ff2 = OMIP021Trans[[1]])

# returning only distance, 2 channels
dist1 <- EMDDist(
    ff1 = OMIP021Trans[[1]], 
    ff2 = OMIP021Trans[[2]], 
    channels = c("FSC-A", "SSC-A"))

# using only one channel, passed by marker name
dist2 <- EMDDist(ff1 = OMIP021Trans[[1]], 
                    ff2 = OMIP021Trans[[2]], 
                    channels = c("BV785 - CD3"))

# using only one channel, passed by index
dist3 <- EMDDist(ff1 = OMIP021Trans[[1]], 
                    ff2 = OMIP021Trans[[2]], 
                    channels = 10)

dist2 == dist3

}
